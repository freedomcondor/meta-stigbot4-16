From 1f45497a83aba6af5259114d544f4652fb14faba Mon Sep 17 00:00:00 2001
From: Michael Allwright <allsey87@gmail.com>
Date: Mon, 30 Apr 2018 10:49:17 +0200
Subject: [PATCH 1/2] First revision of ARGoS with hardware boilerplate code

---
 src/cmake/ARGoSBuildOptions.cmake |  2 ++
 src/core/CMakeLists.txt           | 15 ++++++++++
 src/core/hardware/actuator.h      | 63 +++++++++++++++++++++++++++++++++++++++
 src/core/hardware/robot.cpp       | 11 +++++++
 src/core/hardware/robot.h         | 38 +++++++++++++++++++++++
 src/core/hardware/sensor.h        | 63 +++++++++++++++++++++++++++++++++++++++
 6 files changed, 192 insertions(+)
 create mode 100644 src/core/hardware/actuator.h
 create mode 100644 src/core/hardware/robot.cpp
 create mode 100644 src/core/hardware/robot.h
 create mode 100644 src/core/hardware/sensor.h

diff --git a/src/cmake/ARGoSBuildOptions.cmake b/src/cmake/ARGoSBuildOptions.cmake
index 6bdaeba..84c2b6d 100644
--- a/src/cmake/ARGoSBuildOptions.cmake
+++ b/src/cmake/ARGoSBuildOptions.cmake
@@ -14,8 +14,10 @@ add_definitions(-DARGOS_${ARGOS_BUILD_FOR}_BUILD)
 # Create a convenience variable for checks in the CMake files
 if(ARGOS_BUILD_FOR STREQUAL "simulator")
   set(ARGOS_BUILD_FOR_SIMULATOR TRUE)
+  set(ARGOS_BUILD_FOR_HARDWARE FALSE)
 else(ARGOS_BUILD_FOR STREQUAL "simulator")
   set(ARGOS_BUILD_FOR_SIMULATOR FALSE)
+  set(ARGOS_BUILD_FOR_HARDWARE TRUE)
 endif(ARGOS_BUILD_FOR STREQUAL "simulator")
 
 #
diff --git a/src/core/CMakeLists.txt b/src/core/CMakeLists.txt
index cdb7973..abbbe13 100644
--- a/src/core/CMakeLists.txt
+++ b/src/core/CMakeLists.txt
@@ -68,6 +68,11 @@ set(ARGOS3_HEADERS_CONTROLINTERFACE
   control_interface/ci_actuator.h
   control_interface/ci_controller.h
   control_interface/ci_sensor.h)
+# argos3/core/hardware
+set(ARGOS3_HEADERS_HARDWARE
+  hardware/actuator.h
+  hardware/sensor.h
+  hardware/robot.h)
 # argos3/core/simulator
 set(ARGOS3_HEADERS_SIMULATOR
   simulator/actuator.h
@@ -159,6 +164,13 @@ set(ARGOS3_SOURCES_CORE
 if(ARGOS_DYNAMIC_LIBRARY_LOADING)
   set(ARGOS3_SOURCES_CORE ${ARGOS3_SOURCES_CORE} utility/plugins/dynamic_loading.cpp)
 endif(ARGOS_DYNAMIC_LIBRARY_LOADING)
+# Compile hardware code only if requested
+if(ARGOS_BUILD_FOR_HARDWARE)
+  set(ARGOS3_SOURCES_CORE
+    ${ARGOS3_SOURCES_CORE}
+    ${ARGOS3_HEADERS_HARDWARE}
+    hardware/robot.cpp)
+endif(ARGOS_BUILD_FOR_HARDWARE)
 # Compile simulator code only if requested
 if(ARGOS_BUILD_FOR_SIMULATOR)
   set(ARGOS3_SOURCES_CORE
@@ -231,6 +243,9 @@ install(FILES ${ARGOS3_HEADERS_UTILITY_PROFILER}              DESTINATION includ
 install(FILES ${ARGOS3_HEADERS_UTILITY_MATH}                  DESTINATION include/argos3/core/utility/math)
 install(FILES ${ARGOS3_HEADERS_UTILITY_MATH_MATRIX}           DESTINATION include/argos3/core/utility/math/matrix)
 install(FILES ${ARGOS3_HEADERS_CONTROLINTERFACE}              DESTINATION include/argos3/core/control_interface)
+if(ARGOS_BUILD_FOR_HARDWARE)
+  install(FILES ${ARGOS3_HEADERS_HARDWARE}                    DESTINATION include/argos3/core/hardware)
+endif(ARGOS_BUILD_FOR_HARDWARE)
 if(ARGOS_BUILD_FOR_SIMULATOR)
   install(FILES ${ARGOS3_HEADERS_SIMULATOR}                   DESTINATION include/argos3/core/simulator)
   install(FILES ${ARGOS3_HEADERS_SIMULATOR_ACTUATORS}         DESTINATION include/argos3/core/simulator/actuators)
diff --git a/src/core/hardware/actuator.h b/src/core/hardware/actuator.h
new file mode 100644
index 0000000..8fa57db
--- /dev/null
+++ b/src/core/hardware/actuator.h
@@ -0,0 +1,63 @@
+/**
+ * @file <argos3/core/hardware/actuator.h>
+ *
+ * @author Michael Allwright - <allsey87@gmail.com>
+ */
+
+#ifndef PHYSICAL_ACTUATOR_H
+#define PHYSICAL_ACTUATOR_H
+
+#include <argos3/core/utility/plugins/factory.h>
+
+namespace argos {
+
+   /**
+    * The basic interface for a physical actuator.
+    * To implement the physical model of an actuator, you must define a class
+    * that inherits from both the control interface and this class.
+    * @see CCI_Actuator
+    */
+   class CPhysicalActuator {
+
+   public:
+
+      /**
+       * Class destructor.
+       */
+      virtual ~CPhysicalActuator() {}
+
+      /**
+       * Updates the state of the entity associated to this actuator.
+       */
+      virtual void Update() = 0;
+
+   };
+
+   /****************************************/
+   /****************************************/
+
+}
+
+/**
+ * Registers a new actuator model inside ARGoS.
+ * You must register your actuator model for ARGoS to be able to recognize it.
+ * This statement must be included in a .cpp file. It can't be in a header.
+ */
+#define REGISTER_ACTUATOR(CLASSNAME,                        \
+                          LABEL,                            \
+                          IMPLEMENTATION,                   \
+                          AUTHOR,                           \
+                          VERSION,                          \
+                          BRIEF_DESCRIPTION,                \
+                          LONG_DESCRIPTION,                 \
+                          STATUS)                           \
+   REGISTER_SYMBOL(CPhysicalActuator,                      \
+                   CLASSNAME,                               \
+                   LABEL " (" IMPLEMENTATION ")",           \
+                   AUTHOR,                                  \
+                   VERSION,                                 \
+                   BRIEF_DESCRIPTION,                       \
+                   LONG_DESCRIPTION,                        \
+                   STATUS)
+
+#endif
diff --git a/src/core/hardware/robot.cpp b/src/core/hardware/robot.cpp
new file mode 100644
index 0000000..ecf4fd9
--- /dev/null
+++ b/src/core/hardware/robot.cpp
@@ -0,0 +1,11 @@
+/**
+ * @file <argos3/core/hardware/robot.cpp>
+ *
+ * @author Michael Allwright - <allsey87@gmail.com>
+ */
+
+#include "robot.h"
+
+/****************************************/
+/****************************************/
+
diff --git a/src/core/hardware/robot.h b/src/core/hardware/robot.h
new file mode 100644
index 0000000..140a1d8
--- /dev/null
+++ b/src/core/hardware/robot.h
@@ -0,0 +1,38 @@
+/**
+ * @file <argos3/core/hardware/robot.h>
+ *
+ * @author Michael Allwright - <allsey87@gmail.com>
+ */
+
+#ifndef PHYSICAL_SENSOR_H
+#define PHYSICAL_SENSOR_H
+
+namespace argos {
+   class CPhysicalRobot;
+}
+
+#include <string>
+
+namespace argos {
+
+   class CPhysicalRobot {
+
+   public:
+
+      /**
+       * Class destructor.
+       */
+      virtual ~CPhysicalRobot() {}
+
+   private:
+
+      std::string m_strId;
+
+   };
+
+   /****************************************/
+   /****************************************/
+
+}
+
+#endif
diff --git a/src/core/hardware/sensor.h b/src/core/hardware/sensor.h
new file mode 100644
index 0000000..062a2ca
--- /dev/null
+++ b/src/core/hardware/sensor.h
@@ -0,0 +1,63 @@
+/**
+ * @file <argos3/core/hardware/sensor.h>
+ *
+ * @author Michael Allwright - <allsey87@gmail.com>
+ */
+
+#ifndef PHYSICAL_SENSOR_H
+#define PHYSICAL_SENSOR_H
+
+#include <argos3/core/utility/plugins/factory.h>
+
+namespace argos {
+
+   /**
+    * The basic interface for a physical sensor.
+    * To implement the physical model of an sensor, you must define a class
+    * that inherits from both the control interface and this class.
+    * @see CCI_Sensor
+    */
+   class CPhysicalSensor {
+
+   public:
+
+      /**
+       * Class destructor.
+       */
+      virtual ~CPhysicalSensor() {}
+
+      /**
+       * Updates the sensor with readings from the hardware.
+       */
+      virtual void Update() = 0;
+
+   };
+
+   /****************************************/
+   /****************************************/
+
+}
+
+/**
+ * Registers a new sensor model inside ARGoS.
+ * You must register your sensor model for ARGoS to be able to recognize it.
+ * This statement must be included in a .cpp file. It can't be in a header.
+ */
+#define REGISTER_SENSOR(CLASSNAME,                          \
+                        LABEL,                              \
+                        IMPLEMENTATION,                     \
+                        AUTHOR,                             \
+                        VERSION,                            \
+                        BRIEF_DESCRIPTION,                  \
+                        LONG_DESCRIPTION,                   \
+                        STATUS)                             \
+   REGISTER_SYMBOL(CPhysicalSensor,                         \
+                   CLASSNAME,                               \
+                   LABEL " (" IMPLEMENTATION ")",           \
+                   AUTHOR,                                  \
+                   VERSION,                                 \
+                   BRIEF_DESCRIPTION,                       \
+                   LONG_DESCRIPTION,                        \
+                   STATUS)
+
+#endif
-- 
2.11.0

